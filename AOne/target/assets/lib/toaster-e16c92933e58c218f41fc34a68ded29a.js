(function(){"use strict";angular.module("toaster",["ngAnimate"]).service("toaster",["$rootScope",function(e){this.pop=function(t,n,r,i,s,o){if(angular.isObject(t)){var u=t;this.toast={type:u.type,title:u.title,body:u.body,timeout:u.timeout,bodyOutputType:u.bodyOutputType,clickHandler:u.clickHandler}}else{this.toast={type:t,title:n,body:r,timeout:i,bodyOutputType:s,clickHandler:o}}e.$emit("toaster-newToast")};this.clear=function(){e.$emit("toaster-clearToasts")}}]).constant("toasterConfig",{limit:0,"tap-to-dismiss":true,"close-button":false,"newest-on-top":true,"time-out":5e3,"icon-classes":{error:"toast-error",info:"toast-info",wait:"toast-wait",success:"toast-success",warning:"toast-warning"},"body-output-type":"","body-template":"toasterBodyTmpl.html","icon-class":"toast-info","position-class":"toast-top-right","title-class":"toast-title","message-class":"toast-message"}).directive("toasterContainer",["$compile","$rootScope","$interval","$sce","toasterConfig","toaster",function(e,t,n,r,i,s){return{replace:true,restrict:"EA",scope:true,link:function(e,o,u){function l(t){t.type=f["icon-classes"][t.type];if(!t.type)t.type=f["icon-class"];a++;angular.extend(t,{id:a});t.bodyOutputType=t.bodyOutputType||f["body-output-type"];switch(t.bodyOutputType){case"trustedHtml":t.html=r.trustAsHtml(t.body);break;case"template":t.bodyTemplate=t.body||f["body-template"];break}e.configureTimer(t);if(f["newest-on-top"]===true){e.toasters.unshift(t);if(f["limit"]>0&&e.toasters.length>f["limit"]){e.toasters.pop()}}else{e.toasters.push(t);if(f["limit"]>0&&e.toasters.length>f["limit"]){e.toasters.shift()}}}function c(t,r){t.timeout=n(function(){e.removeToast(t.id)},r)}var a=0,f;f=angular.extend({},i,e.$eval(u.toasterOptions));e.config={position:f["position-class"],title:f["title-class"],message:f["message-class"],tap:f["tap-to-dismiss"],closeButton:f["close-button"],animation:f["animation-class"]};e.configureTimer=function(t){var n=typeof t.timeout=="number"?t.timeout:f["time-out"];if(n>0)c(t,n)};e.toasters=[];t.$on("toaster-newToast",function(){l(s.toast)});t.$on("toaster-clearToasts",function(){e.toasters.splice(0,e.toasters.length)})},controller:["$scope","$element","$attrs",function(e,t,r){e.stopTimer=function(e){if(e.timeout){n.cancel(e.timeout);e.timeout=null}};e.restartTimer=function(t){if(!t.timeout)e.configureTimer(t)};e.removeToast=function(t){var n=0;for(n;n<e.toasters.length;n++){if(e.toasters[n].id===t)break}e.toasters.splice(n,1)};e.click=function(t,n){if(e.config.tap===true){var r=true;if(t.clickHandler){if(angular.isFunction(t.clickHandler)){r=t.clickHandler(t,n)}else if(angular.isFunction(e.$parent.$eval(t.clickHandler))){r=e.$parent.$eval(t.clickHandler)(t,n)}else{console.log("TOAST-NOTE: Your click handler is not inside a parent scope of toaster-container.")}}if(r){e.removeToast(t.id)}}}}],template:'<div  id="toast-container" ng-class="[config.position, config.animation]">'+'<div ng-repeat="toaster in toasters" class="toast" ng-class="toaster.type" ng-click="click(toaster)" ng-mouseover="stopTimer(toaster)"  ng-mouseout="restartTimer(toaster)">'+'<button class="toast-close-button" ng-show="config.closeButton" ng-click="click(toaster, true)">&times;</button>'+'<div ng-class="config.title">{{toaster.title}}</div>'+'<div ng-class="config.message" ng-switch on="toaster.bodyOutputType">'+'<div ng-switch-when="trustedHtml" ng-bind-html="toaster.html"></div>'+'<div ng-switch-when="template"><div ng-include="toaster.bodyTemplate"></div></div>'+"<div ng-switch-default >{{toaster.body}}</div>"+"</div>"+"</div>"+"</div>"}}])})(window,document)